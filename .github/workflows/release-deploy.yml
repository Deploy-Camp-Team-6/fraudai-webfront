name: Release Deploy

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  RELEASE_TAG: ${{ github.event.release.tag_name }}
  STACK_FILE: webfront-docker-stack.yml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Normalize names to lowercase
        run: |
          echo "IMAGE_NAME_LC=${IMAGE_NAME,,}" >> $GITHUB_ENV
          echo "RELEASE_TAG_LC=${RELEASE_TAG,,}" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:${{ env.RELEASE_TAG_LC }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Ensure target dir exists
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SWARM_HOST }}
          username: ${{ secrets.SWARM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ${{ secrets.SWARM_TARGET_DIR }}

      - name: Copy stack file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SWARM_HOST }}
          username: ${{ secrets.SWARM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.STACK_FILE }}
          target: ${{ secrets.SWARM_TARGET_DIR }}
          overwrite: true
          debug: true

      - name: Deploy stack
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SWARM_HOST }}
          username: ${{ secrets.SWARM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:${{ env.RELEASE_TAG_LC }} \
            DOMAIN=${{ secrets.DOMAIN }} \
            docker stack deploy -c ${{ secrets.SWARM_TARGET_DIR }}/${{ env.STACK_FILE }} \
              ${{ secrets.SWARM_STACK_NAME }} --with-registry-auth
